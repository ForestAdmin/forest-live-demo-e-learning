// This model was generated by Forest CLI. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Courses = sequelize.define('courses', {
    title: {
      type: DataTypes.STRING,
    },
    description: {
      type: DataTypes.STRING,
    },
  }, {
    tableName: 'courses',
    timestamps: false,
    schema: process.env.DATABASE_SCHEMA,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/reference-guide/relationships#adding-relationships.
  Courses.associate = (models) => {
    Courses.belongsTo(models.users, {
      foreignKey: {
        name: 'instructorIdKey',
        field: 'instructor_id',
      },
      as: 'instructor',
    });
    Courses.hasMany(models.enrollments, {
      foreignKey: {
        name: 'courseIdKey',
        field: 'course_id',
      },
      as: 'enrollments',
    });
    Courses.hasMany(models.lessons, {
      foreignKey: {
        name: 'courseIdKey',
        field: 'course_id',
      },
      as: 'lessons',
    });
    Courses.hasMany(models.progresses, {
      foreignKey: {
        name: 'courseIdKey',
        field: 'course_id',
      },
      as: 'progresses',
    });
    Courses.hasMany(models.discussions, {
      foreignKey: {
        name: 'courseIdKey',
        field: 'course_id',
      },
      as: 'discussions',
    });
  };

  return Courses;
};
