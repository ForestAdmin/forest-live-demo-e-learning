// This model was generated by Forest CLI. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Users = sequelize.define('users', {
    name: {
      type: DataTypes.STRING,
    },
    email: {
      type: DataTypes.STRING,
    },
    password: {
      type: DataTypes.STRING,
    },
    role: {
      type: DataTypes.ENUM(
        'student',
        'teacher',
        'administrator',
      ),
    },
  }, {
    tableName: 'users',
    timestamps: false,
    schema: process.env.DATABASE_SCHEMA,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/reference-guide/relationships#adding-relationships.
  Users.associate = (models) => {
    Users.hasMany(models.courses, {
      foreignKey: {
        name: 'instructorIdKey',
        field: 'instructor_id',
      },
      as: 'instructorCourses',
    });
    Users.hasMany(models.enrollments, {
      foreignKey: {
        name: 'userIdKey',
        field: 'user_id',
      },
      as: 'enrollments',
    });
    Users.hasMany(models.progresses, {
      foreignKey: {
        name: 'userIdKey',
        field: 'user_id',
      },
      as: 'progresses',
    });
    Users.hasMany(models.discussions, {
      foreignKey: {
        name: 'userIdKey',
        field: 'user_id',
      },
      as: 'discussions',
    });
  };

  return Users;
};
